<project name="Install Utilities" default="all" basedir=".">
  <description>
    Currently provides only the ability to create .HTML files from .texi files
    and procude PDF documentation; relies on the GNU 'texi2html' and
    'texi2pdf' utilities (available for all operating systems).

    Both utilities are available for Linux via most repositories. Windows users
    should download and install GNU Cygwin.
  </description>
  <!-- set global properties for this build -->

  <target name="clean"
          description="Removes directories generated from this build file." >
    <delete file="assets/*"/>
  </target>

  <target name="all"
          description="Deploys help and license data."
          depends="deploy-help">
  </target>

  <target name="deploy-help" if="generate.docs"
          description="Deploys the built .html files to the Swing UI project.">
    <copy toDir="assets" overwrite="true">
      <fileset file="../timeclockj.docs/target/docs/multi-page-html/*.html"/>
      <fileset file="../timeclockj.docs/target/docs/multi-page-html/images/*.png"/>
    </copy>
    <!--copy todir="${dir.ui.help}/images" overwrite="true">
      <fileset file="${tmp.dir.help.files.help}/images/*"/>
    </copy-->
  </target>
  
	<target name="svn-revision">
		<!--
		Exec `svn info` to get the revision of the code being built.
		Note that the output of this command is in "name: value" format
		so we can pretend it's a java properties file.
		-->
		<exec executable="svn" output="svn-info.properties">
			<arg line="info"/>
		</exec>
		<property prefix="svn" file="svn-info.properties"/>
		<echo>Revision: ${svn.Revision}</echo>

		<!--
		Write the revision number into the Manifest as the last
		segment of the VersionName property
		-->
		<replaceregexp file="AndroidManifest.xml"
			match='android:versionName="([^".]+\.[^".]+)(\.[^"]*)?"'
			replace='android:versionName="\1.${svn.Revision}"'
		/>

		<!--
		Clean up
		-->
		<delete file="svn-info.properties"/>
	</target>

</project>
